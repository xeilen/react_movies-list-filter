{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Search/Search.js","components/shapes/MovieCardShape.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","Search","PropTypes","string","isRequired","state","query","filterMovies","event","target","name","value","props","update","valueToLower","toLowerCase","filter","titleToLower","descriptionToLower","includes","setState","this","htmlFor","type","id","placeholder","onChange","Component","App","moviesFromServer","updateMovies","updatedMovies","ReactDOM","render","document","getElementById"],"mappings":"kwEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,kCCqCKK,GC5DNC,IAAUC,OAAOC,WACXF,IAAUC,OACfD,IAAUC,OAAOC,WAChBF,IAAUC,OAAOC,W,4MDD1BC,MAAQ,CACNC,MAAO,I,EAGTC,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAAtBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MADU,EAEG,EAAKC,MAAxBhB,EAFgB,EAEhBA,OAAQiB,EAFQ,EAERA,OACVC,EAAeH,EAAMI,cAY3BF,EAFsBjB,EAAOoB,QARN,SAAClB,GACtB,IAAMmB,EAAenB,EAAMZ,MAAM6B,cAC3BG,EAAqBpB,EAAMX,YAAY4B,cAE7C,OAAOE,EAAaE,SAASL,IACxBI,EAAmBC,SAASL,OAOnC,EAAKM,SAAL,eACGV,EAAOC,K,uDAIF,IACAL,EAAUe,KAAKhB,MAAfC,MAER,OACE,yBAAKhB,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAOgC,QAAQ,eAAehC,UAAU,SAAxC,gBAIA,yBAAKA,UAAU,WACb,2BACEiC,KAAK,OACLC,GAAG,eACHd,KAAK,QACLpB,UAAU,QACVqB,MAAOL,EACPmB,YAAY,mBACZC,SAAUL,KAAKd,sB,GA7CRoB,cEERC,EAAb,4MACEvB,MAAQ,CACNT,OAAQiC,GAFZ,EAKEC,aAAe,SAACC,GACd,EAAKX,SAAS,CACZxB,OAAQmC,KAPd,uDAWY,IACAnC,EAAWyB,KAAKhB,MAAhBT,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAQM,OAAQiC,EAAkBhB,OAAQQ,KAAKS,eAE/C,kBAAC,EAAD,CAAYlC,OAAQA,KAEtB,yBAAKN,UAAU,WAAf,0BArBR,GAAyBqC,aCDzBK,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.93b4c1c3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { MovieCardShape } from '../shapes/MovieCardShape';\n\nclass Search extends Component {\n  state = {\n    query: '',\n  };\n\n  filterMovies = (event) => {\n    const { name, value } = event.target;\n    const { movies, update } = this.props;\n    const valueToLower = value.toLowerCase();\n\n    const filterCallback = (movie) => {\n      const titleToLower = movie.title.toLowerCase();\n      const descriptionToLower = movie.description.toLowerCase();\n\n      return titleToLower.includes(valueToLower)\n        || descriptionToLower.includes(valueToLower);\n    };\n\n    const updatedMovies = movies.filter(filterCallback);\n\n    update(updatedMovies);\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { query } = this.state;\n\n    return (\n      <div className=\"box\">\n        <div className=\"field\">\n          <label htmlFor=\"search-query\" className=\"label\">\n            Search movie\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"search-query\"\n              name=\"query\"\n              className=\"input\"\n              value={query}\n              placeholder=\"Type search word\"\n              onChange={this.filterMovies}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSearch.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape(MovieCardShape)).isRequired,\n  update: PropTypes.func.isRequired,\n};\n\nexport default Search;\n","import PropTypes from 'prop-types';\n\nexport const MovieCardShape = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\nimport Search from './components/Search/Search';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  updateMovies = (updatedMovies) => {\n    this.setState({\n      movies: updatedMovies,\n    });\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <Search movies={moviesFromServer} update={this.updateMovies} />\n\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}